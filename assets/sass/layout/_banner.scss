/* Banner */

#banner {
	@include vendor('display', 'flex');
	@include vendor('flex-direction', 'row');
	background-color: darken(_palette(accent1, bg), 15);

	> .items {
		@include vendor('display', 'flex');
		@include vendor('flex-direction', 'column');
		@include vendor('flex-grow', '0');
		@include vendor('flex-shrink', '0');
		width: 40%;

			h1 {
				font-size: 1.75em;
				color: white;
			}
			p {
				color: white;
			}


			&.accent1 {
				@include color-typography(accent1);
				@include color-button(accent1);
			}
		//color changes must be made in main.css!!!
			&.accent2 {
				@include color-typography(accent1);
				@include color-button(accent1);
				 background-image: linear-gradient(
				 	 to right,

				#cfab38, #d4af37, #a9aaae, #c8caca );
				@include color-button(accent2);
			}

			&.accent3 {
				@include color-typography(accent3);
				@include color-button(accent3);
			}

			&.accent4 {
				@include color-typography(accent4);
				@include color-button(accent4);
			}
		}
	}

	> .slider {
		@include vendor('flex-grow', '0');
		@include vendor('flex-shrink', '0');
		@include vendor(
			'transition',
			'opacity #{_duration(slider)} ease-in-out'
		);
		width: 60%;
		opacity: 1;
		position: relative;

		> article {
			@include vendor(
				'transition',
				(
					'opacity #{_duration(slider)}',
					'visibility #{_duration(slider)}'
				)
			);
			background-size: cover;
			height: 100%;
			position: absolute;
			top: 0;
			left: 0;
			width: 100%;
			opacity: 0;
			visibility: hidden;
			z-index: 0;

			&.visible {
				opacity: 1;
				visibility: visible;
			}

			&.top {
				z-index: 1;
			}

			&:before {
				content: '';
				height: 100%;
				left: 0;
				opacity: 0;
				position: absolute;
				top: 0;
				width: 100%;
			}

			img {
				height: 100%;
				width: 100%;
			}
		}

	}

	body.is-preload  {
		> .slider {
			opacity: 0;
		}
	}

	@include breakpoint('<=xlarge') {
		> .items {
			section {
				@include padding(4.5em, 5em);
			}
		}
	}

	@include breakpoint('<=large') {
		> .items {
			section {
				@include padding(3.5em, 3em);
			}
		}
	}

	@include breakpoint('<=medium') {
		@include vendor('flex-direction', 'column-reverse');

		> .items {
			@include vendor('flex-direction', 'row');
			width: 100%;
		}

		> .slider {
			height: 40em;
			max-height: 55vh;
			width: 100%;
		}
	}

	@include breakpoint('<=small') {
		> .items {
			section {
				@include padding(3em, 3em);

				h1 {
					font-size: 1.5em;
				}
			}
		}

		> .slider {
			height: 30em;
			max-height: none;
		}
	}

	@include breakpoint('<=xsmall') {
		> .items {
			@include vendor('flex-direction', 'column');

			section {
				@include padding(3em, 3em);
			}
		}

		> .slider {
			height: 20em;
			max-height: 40vh;
		}
		// New media query for landscape orientation
		@media screen and (max-width: 480px) and (orientation: landscape) {
			> .items {
				// Adjust flex-direction if needed for landscape
				@include vendor('flex-direction', 'row');

				section {
					// Adjust padding for landscape if necessary
					@include padding(2em, 2em);
				}
			}

			> .slider {
				// Adjust height for landscape
				height: 15em;
				max-height: 70vh; // Increase max-height for landscape
			}
		}

		// New media query for landscape orientation
		@media screen and (max-width: 768px) and (orientation: landscape) {
			> .items {
				@include vendor('flex-direction', 'row');
				@include vendor('flex-wrap', 'wrap');
				justify-content: space-around;

				section {
					@include padding(2em, 2em);
					flex-basis: calc(50% - 2em);
					min-width: 250px;
					max-width: 100%;
				}
			}

			> .slider {
				height: 40vh;
				min-height: 250px;
				max-height: 400px;
			}

			// Additional improvements
			.slider-content {
				max-width: 90%;
				margin: 0 auto;
			}

			h2 {
				font-size: 1.5em;
			}

			p {
				font-size: 0.9em;
				line-height: 1.4;
			}

			// Improve touch targets for mobile
			button,
			.button {
				min-height: 44px;
				min-width: 44px;
				padding: 0.5em 1em;
			}
		}
		@media screen and (max-width: 926px) and (orientation: landscape) {
			.container {
				width: 95%;
				max-width: 900px;
				margin: 0 auto;
				padding: 0 20px;
			}

			.header {
				font-size: 2em;
				text-align: left;
			}

			.content {
				font-size: 1em;
				line-height: 1.5;
				column-count: 2;
				column-gap: 30px;
			}

			.navigation {
				flex-direction: row;
				justify-content: space-between;
				align-items: center;
			}

			.nav-item {
				margin: 0 10px;
			}

			.image {
				max-width: 100%; // Ensure the image takes the full width of its container
				height: auto; // Maintain aspect ratio
				min-height: 200px; // Set a minimum height to prevent scrunching
				object-fit: cover; // Ensure the image covers the area without distortion
				margin-left: 20px; // Add margin for spacing
			}

			.button {
				width: auto;
				padding: 10px 20px;
				font-size: 0.9em;
			}

			// Improve touch targets while considering landscape orientation
			.clickable {
				min-height: 36px;
				min-width: 36px;
			}

			// Adjust grid layouts for landscape
			.grid {
				grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
				gap: 20px;
			}

			// Specific adjustments for your slider if needed
			> .slider {
				height: 50vh; // Adjust this value as needed
				max-height: 500px; // Increase max-height for better image display
			}

			> .items {
				@include vendor('flex-direction', 'row');
				@include vendor('flex-wrap', 'nowrap');
				overflow-x: auto;
				-webkit-overflow-scrolling: touch;

				section {
					flex: 0 0 auto;
					width: 80%;
					max-width: 400px;
					margin-right: 20px;
					@include padding(2em, 2em);
				}
			}
		}
	}

